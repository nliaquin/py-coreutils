#!/usr/bin/python

# --- Documentation --- #
### py-coreutils
##  ls.py
#   Nickolas Iaquinta - NLiaquin - nliaquin.xyz

## Description:
# ls.py is a recreation on Unix/GNU's ls in Python

## Function Requirements:
# The software shall print out the contents of a given directory
# The software shall provide options to print out hidden contents of a directory
# The software shall provide options to print out the metadata from contents of a given directory
# The software shall allow the user to specify a directory given an directory in the form of a string
# The software shall print out the contents of the directory it is executed in when not given a specic directory in the form of a string

## Non-Functional Requirements
# The software will eventually work in compatibility with a future py-coreutil, grep.py

# --- Source Code --- #
import datetime
import math
import os
import argparse
import stat
from pwd import getpwuid
from grp import getgrgid

# parseArgs is a function that returns the parsable arguments generated by the argparse namespace utilities
# Inside of this function, the optional flags available to the user are added to the parsing dictionary
def parseArgs():
    pass

# aFlag is the function that returns all contents of a given directory, including hidden files and folders
def aFlag():
    pass

# lFlag is the function that returns the metadata of the files found within a given directory
def lFlag():
    pass

# ls is the method that actually handles recieving all arguments from the user and outputing the desired results
# think of this as our primary method, which controls the flow of data and determines which functions are to be called
def ls(args):
    pass

# main method, program entry-point
if __name__ == '__main__':
    pass

